{"version":3,"sources":["shared/ActiveUserContext.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/SignupPage/SignupPage.js","components/HoaNavBar/HoaNavBar.js","components/FilterMessage/FilterMessages.js","components/Comments/Comments.js","components/MessageDetailsCard/MessageDetailsCard.js","components/MessageCard/MessageCard.js","components/NewMessageModal/NewMessageModal.js","pages/MessagesPage/MessagesPage.js","shared/Utils.js","components/NewVoteCard/NewVoteCard.js","components/VotingCardContent/VotingCardContent.js","components/VotingCard/VotingCard.js","components/VotingsCard/VotingsCard.js","components/NewVotingModal/NewVotingModal.js","pages/VotingsPage/VotingsPage.js","model/VotingModel.js","pages/DashboardPage/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","HomePage","props","useContext","className","Typography","variant","to","LoginPage","useState","email","setEmail","pwd","setPwd","showLoginError","setShowLoginError","redirectToHomePage","setRedirectToHomePage","users","onLogin","Grid","container","spacing","direction","alignItems","justify","style","minHeight","component","Alert","severity","TextField","margin","fullWidth","label","value","onChange","e","target","type","Button","color","onClick","userFound","find","user","toLowerCase","SignupPage","HoaNavBar","activeUser","onLogout","msgNum","votingsNum","AppBar","position","Toolbar","Link","href","fname","lname","Avatar","alt","src","img","IconButton","aria-label","fontSize","Badge","badgeContent","FilterMessages","filterByPriority","filterBy","updSortBy","filterPriority","setFilterPriority","sortBy","setSortBy","noValidate","autoComplete","FormControl","InputLabel","id","Select","labelId","event","MenuItem","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","Comments","messageId","comments","addComment","newComment","setNewComment","commentsView","map","comment","u","createdBy","ListItem","button","ListItemIcon","ListItemText","text","Card","List","multiline","rows","MessageDetailsCard","message","CardActionArea","CardMedia","image","title","CardContent","details","gutterBottom","createAt","priority","MessageCard","expanded","setExpanded","useStyles","makeStyles","theme","dialog","backgroundColor","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","imgPreview","NewMessageModal","show","handleClose","addMessage","setTitle","setDetails","setPriority","setImg","classes","closeModal","imgURL","URL","createObjectURL","Dialog","open","keepMounted","onClose","aria-labelledby","aria-describedby","maxWidth","DialogTitle","DialogContent","htmlFor","accept","files","length","Fab","size","DialogActions","MessagesPage","messages","filter","setFilter","showModal","setShowModal","sortByDate","a","b","Date","date","sortByPriority","val","data","msg","includes","parseInt","sort","messagesView","getCurrentDateAsStr","getDateAsStr","d","getTime","getFullYear","toString","getMonth","getDate","getHours","getMinutes","randomColorArr","num","colors","push","Math","floor","random","NewVoteCard","voting","addVote","option","setOption","options","VotingCardContent","usersNum","isActiveVoting","dueDate","labels","datasets","calculatedVotes","hoverBackgroundColor","height","align","legend","responsive","maintainAspectRatio","votesNum","x","reduce","c","VotingCard","result","VotingsCard","votings","newOption","NewVotingModal","addVoting","endDate","setEndDate","optionsList","setOptionsList","handleAddOptionClick","i","index","list","handleOptionsInputChange","defaultValue","InputLabelProps","shrink","VotingsPage","notActiveVotings","v","VotingModel","plainVotingOrid","this","votes","calcVotes","nVotes","vote","idx","findIndex","DashboardPage","calculatedVotings","slice","some","votingId","votedBy","App","jsonUsers","jsonMessages","setMessages","jsonComments","setComments","jsonVotes","setVotes","jsonVotings","plainVoting","calculateVotes","setCalculatedVotings","setActiveUser","txt","maxId","max","o","concat","Provider","exact","path","loggedinUser","newMessage","newVoting","newVote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65232601.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import { Typography } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage(props) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\"/>\r\n      } else {\r\n    return (\r\n        <div className=\"p-home\">\r\n            <Typography variant=\"h4\">\r\n                    Homeowner Association Management System\r\n            </Typography>\r\n        </div>\r\n    )\r\n      }\r\n\r\n}\r\n\r\nexport default HomePage;","import { Button, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage(props) {\r\n    const [email, setEmail] = useState(\"bob.sponge@gmail.com\");\r\n    const [pwd, setPwd] = useState(\"123\");\r\n    const [showLoginError, setShowLoginError] = useState(false);\r\n    const [redirectToHomePage, setRedirectToHomePage] = useState(false);\r\n    const { users, onLogin } = props;\r\n\r\n    function login() {\r\n\r\n        const userFound = users.find(user => user.email.toLowerCase() === email.toLowerCase() && user.pwd === pwd);\r\n        if (userFound) {\r\n            onLogin(userFound);\r\n            setRedirectToHomePage(true);\r\n        } else {\r\n            setShowLoginError(true);\r\n        }\r\n    }\r\n\r\n\r\n    if (redirectToHomePage) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{ minHeight: '50vh' }}\r\n            >\r\n                <div className=\"home-container\">\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Log in\r\n   </Typography>\r\n                {showLoginError ? <Alert severity=\"error\">Invalid Credentials!</Alert> : null}\r\n                <form >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Email Address\" value={email} onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\" value={pwd} onChange={e => setPwd(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\" onClick={login}\r\n                    >\r\n                        Log In\r\n      </Button>\r\n                </form>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginPage;","\r\n\r\nfunction SignupPage() {\r\n\r\n    return (\r\n        <div className=\"p-signup\">\r\n            SignupPage\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignupPage;","import { AppBar, Avatar, Badge, IconButton, Link, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport ActiveUserContext from \"../../shared/ActiveUserContext\";\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport './HoaNavBar.css';\r\n\r\nfunction HoaNavBar(props) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const { onLogout, msgNum, votingsNum } = props;\r\n\r\n    return (\r\n        <div className=\"c-hoa-navbar\">\r\n            <AppBar position=\"static\" className=\"menu-container\">\r\n                <Toolbar className=\"nav-container\">\r\n                    <Link href=\"#\">\r\n                        <Typography variant=\"h4\">\r\n                            HOA Systems\r\n                    </Typography>\r\n                    </Link>\r\n                    {activeUser ?\r\n                        <div className=\"user-container\">\r\n                            <h3>Hello {activeUser.fname} {activeUser.lname}</h3>\r\n                            <Avatar alt={activeUser.fname + \" \" + activeUser.lname} src={activeUser.img} className=\"user-img\" />\r\n\r\n                        </div>\r\n                        : null}\r\n                    {activeUser ?\r\n                        <div>\r\n                            <Link href=\"#dashboard\" ><IconButton aria-label=\"show dashboard\" color=\"inherit\">\r\n                                <DashboardIcon fontSize=\"large\" />\r\n                            </IconButton></Link>\r\n                            <Link href=\"#/messages\" ><IconButton aria-label=\"show new messages\" color=\"inherit\">\r\n                                <Badge badgeContent={msgNum} color=\"secondary\">\r\n                                    <MessageIcon fontSize=\"large\" />\r\n                                </Badge>\r\n                            </IconButton></Link>\r\n                            <Link href=\"#/votings\" ><IconButton aria-label=\"show votings\" color=\"inherit\">\r\n                                <Badge badgeContent={votingsNum} color=\"secondary\">\r\n                                    <ThumbUpIcon fontSize=\"large\" />\r\n                                </Badge>\r\n                            </IconButton></Link>\r\n                        </div>\r\n                        : null}\r\n                    {\r\n                        activeUser ? null :\r\n                            <div className=\"links-container\">\r\n                                <Link href=\"#/login\">Login</Link> <Link href=\"#/signup\" >Signup</Link>\r\n                            </div>\r\n                    }\r\n                    {activeUser ? <Link href=\"#\" onClick={onLogout}>Logout</Link> : null}\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HoaNavBar;","import TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './FilterMessages.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useState } from 'react';\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nfunction FilterMessages(props) {\r\n    const { filterByPriority, filterBy, updSortBy } = props;\r\n    const [filterPriority, setFilterPriority] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState('date');\r\n\r\n    const handlePriorityChange = (event) => {\r\n        setFilterPriority(event.target.value);\r\n        filterByPriority(event.target.value);\r\n    };\r\n\r\n    const handleSortChange = (event) => {\r\n        setSortBy(event.target.value);\r\n        updSortBy(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"c-filter-messages\">\r\n            <form noValidate autoComplete=\"off\">\r\n                <div className=\"filter-control\">\r\n                    <SearchIcon className=\"search-icon\" />\r\n                    <TextField className=\"form-control\" label=\"filter messages by text in title or details\" onChange={e => filterBy(e.target.value)} />\r\n                </div>\r\n                <FormControl className=\"form-control\">\r\n                    <InputLabel id=\"filter-priority-label\">Filter by priority</InputLabel>\r\n                    <Select\r\n                        labelId=\"filter-priority-label\"\r\n                        id=\"filter-priority\" value={filterPriority}\r\n                        onChange={handlePriorityChange}\r\n                    >\r\n                        <MenuItem value=\"\">ALL</MenuItem>\r\n                        <MenuItem value=\"1\">Alert</MenuItem>\r\n                        <MenuItem value=\"2\">Information</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl component=\"fieldset\">\r\n                    <div className=\"sort-container\">\r\n                    <FormLabel component=\"legend\" className=\"sort-label\">Sort By</FormLabel>\r\n                    <RadioGroup  row aria-label=\"sortBy\" name=\"sortBy1\" value={sortBy} onChange={handleSortChange}>\r\n                        <FormControlLabel value=\"date\" control={<Radio />} label=\"Date\" />\r\n                        <FormControlLabel value=\"priority\" control={<Radio />} label=\"Priority\" />\r\n                    </RadioGroup>\r\n                    </div>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterMessages;","import { Avatar, Button, Card, List, ListItem, ListItemIcon, ListItemText, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport './Comments.css';\r\n\r\nfunction Comments(props) {\r\n    const { messageId, users, comments, addComment } = props;\r\n    const [newComment, setNewComment] = useState(\"\");\r\n\r\n    function handleAddComment(e) {\r\n        if (newComment !== \"\"){\r\n            addComment(messageId, newComment);\r\n            setNewComment(\"\");\r\n        }\r\n    }\r\n\r\n    const commentsView = comments.map(comment => {\r\n        const user = users.find(u => u.id === comment.createdBy);\r\n        return <ListItem button key={comment.id}>\r\n            <ListItemIcon>\r\n                <Avatar alt={user.fname + \" \" + user.lname} src={user.img} />\r\n            </ListItemIcon>\r\n            <ListItemText>{comment.text}</ListItemText>\r\n        </ListItem>\r\n    });\r\n    return (\r\n        <div className=\"c-comments-card\">\r\n            <Card className=\"comments-card-content\">\r\n                <Typography>\r\n                    <span className=\"bold-font\">Comments:</span>\r\n                    </Typography>\r\n                    <List component=\"nav\" aria-label=\"components list\">\r\n                        {commentsView}\r\n                    </List>\r\n                \r\n                <TextField id=\"outlined-basic\" label=\"New Comment\" variant=\"outlined\"\r\n                    multiline value={newComment} fullWidth={true}\r\n                    rows={4} onChange={e => setNewComment(e.target.value)} />\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleAddComment}>\r\n                    Add Comment\r\n            </Button>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;","import { Avatar, Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport './MessageDetailsCard.css';\r\n\r\nfunction MessageDetailsCard(props) {\r\n    const { message, createdBy } = props;\r\n  \r\n    return (\r\n        <div className=\"c-message-details-card\">\r\n        <Card className=\"card\">\r\n          <CardActionArea className=\"area\"> \r\n            <CardMedia\r\n              className=\"media\"\r\n              image={message.img}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent\r\n              className=\"details-content\">\r\n              <Typography>\r\n              <span className=\"bold-font\"> Details:</span><br/>\r\n                {message.details}\r\n              </Typography>\r\n              <Typography  gutterBottom>\r\n              <span className=\"bold-font\">Created By:</span>\r\n              </Typography>\r\n              <Avatar alt={createdBy.fname + \" \" + createdBy.lname} src={createdBy.img} />\r\n              <Typography  gutterBottom>\r\n              <span className=\"bold-font\">Date:</span> { message.createAt }\r\n              </Typography>\r\n              <Typography  gutterBottom>\r\n              <span className=\"bold-font\">Priority:</span> { message.priority === 1 ? \"Alert\" : \"Information\" }\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MessageDetailsCard;","import { useState } from \"react\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport MessageDetailsCard from \"../MessageDetailsCard/MessageDetailsCard\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport './MessageCard.css';\r\n\r\nfunction MessageCard(props) {\r\n    const { message, users, comments, addComment } = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return (\r\n        <div className=\"c-message-card\">\r\n            <dt className={expanded ? 'title is-expanded' : 'title'} onClick={() => setExpanded(!expanded)}>\r\n                <span className=\"title-icon\">{message.priority === 2 ? <InfoIcon/> : <span className=\"red-color\"><WarningIcon/></span>}</span> {message.title} \r\n            </dt>\r\n            <dd className={expanded ? 'content is-expanded' : 'content'} >\r\n                <div className=\"message-card-content\">\r\n                    <div className=\"content-item\"><MessageDetailsCard message={message} createdBy={users.find(u => u.id === message.createdBy)}></MessageDetailsCard></div>\r\n                    <div className=\"content-item\"><Comments messageId={message.id} users={users} comments={comments} addComment={addComment}></Comments></div>\r\n                </div>\r\n            </dd>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageCard;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { useState } from 'react';\r\nimport './NewMessageModal.css';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialog: {\r\n        backgroundColor: '#e8f4fc',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n        backgroundColor: '#e8f4fc'\r\n\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 500,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    imgPreview: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction NewMessageModal(props) {\r\n    const { show, handleClose, addMessage } = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"alert\");\r\n    const [img, setImg] = useState(null);\r\n\r\n    const classes = useStyles();\r\n\r\n    function closeModal() {\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setPriority(\"alert\");\r\n        setImg(null);\r\n        handleClose();\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    const imgURL = img ? URL.createObjectURL(img) : \"\";\r\n\r\n    function handleAddMessage() {\r\n        if ((title !== \"\") && (details !== \"\")) {\r\n            addMessage(title, details, priority, imgURL);\r\n        }\r\n\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-new-message-modal\">\r\n            <Dialog\r\n                open={show}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"message-dialog-slide-title\"\r\n                aria-describedby=\"message-dialog-slide-description\"\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n            >\r\n                <DialogTitle className={classes.dialog} id=\"message-dialog-slide-title\">Add A New Message</DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    <form className={classes.form} noValidate>\r\n                        <FormControl className={classes.formControl}>\r\n                            <TextField id=\"message-title\" variant=\"filled\" label=\"Message Title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <TextField id=\"message-details\" variant=\"filled\" multiline rows={8} label=\"Message Details\" value={details} onChange={e => setDetails(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n\r\n                            <InputLabel id=\"filter-priority-label\">Priority</InputLabel>\r\n                            <Select\r\n                                labelId=\"filter-priority-label\"\r\n                                id=\"filter-priority\" value={priority}\r\n                                onChange={(e) => setPriority(e.target.value)}\r\n                            >\r\n                                <MenuItem value=\"alert\">Alert</MenuItem>\r\n                                <MenuItem value=\"information\">Information</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <label htmlFor=\"upload-photo\">\r\n                                <input\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"upload-photo\"\r\n                                    name=\"upload-photo\"\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleFileChange}\r\n                                />\r\n                                <Fab\r\n                                    color=\"secondary\"\r\n                                    size=\"small\"\r\n                                    component=\"span\"\r\n                                    aria-label=\"add\"\r\n                                    variant=\"extended\"\r\n                                >\r\n                                    <AddIcon /> Upload Image\r\n                                </Fab>\r\n                            </label>\r\n                        </FormControl>\r\n                        <img alt=\"new message\" src={imgURL} className={classes.imgPreview} style={imgURL ? { \"display\": \"block\" } : { \"display\": \"none\" }}></img>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.dialog}>\r\n                    <Button onClick={closeModal} variant=\"contained\" color=\"secondary\" type=\"button\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAddMessage} variant=\"contained\" color=\"primary\" type=\"button\">\r\n                        Add Message\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMessageModal;","import { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FilterMessages from \"../../components/FilterMessage/FilterMessages\";\r\nimport MessageCard from \"../../components/MessageCard/MessageCard\";\r\nimport ActiveUserContext from \"../../shared/ActiveUserContext\";\r\nimport './MessagePage.css';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport NewMessageModal from \"../../components/NewMessageModal/NewMessageModal\";\r\n\r\nfunction MessagesPage(props) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const { messages, users, comments, addComment, addMessage } = props;\r\n    const [filter, setFilter] = useState(\"\");\r\n    const [filterPriority, setFilterPriority] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"date\");\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    function filterBy(txt) {\r\n        setFilter(txt);\r\n    }\r\n\r\n    function filterByPriority(priority) {\r\n        setFilterPriority(priority);\r\n    }\r\n\r\n    function updSortBy(val){\r\n        setSortBy(val);\r\n    }\r\n\r\n    function sortByDate(a, b) {\r\n        return new Date(b.date) - new Date(a.date);\r\n    }\r\n\r\n    function sortByPriority(a, b) {\r\n        return a.priority - b.priority;\r\n    }\r\n\r\n    const messagesView = () => {\r\n\r\n        let data = messages.filter(function (msg) {\r\n            const full = (msg.title + \" \" + msg.details).toLowerCase();\r\n            return full.includes(filter.toLowerCase());\r\n        });\r\n\r\n        if (filterPriority !== \"\"){\r\n            data = data.filter(msg => msg.priority === parseInt(filterPriority));\r\n        }\r\n\r\n        if (sortBy === \"date\") {\r\n            data.sort(sortByDate);\r\n        } else if (sortBy === \"priority\") {\r\n            data.sort(sortByPriority);\r\n        }\r\n        const dataView = data.map(message =>\r\n            <MessageCard key={message.id} message={message} users={users} addComment={addComment} comments={comments.filter(comment => comment.messageId === message.id)}></MessageCard>);\r\n        return dataView;\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    } else {\r\n        return (\r\n            <div className=\"p-messages\">\r\n                <div className=\"messages-container\">\r\n                    <FilterMessages filterBy={name => filterBy(name)} filterByPriority={priority => filterByPriority(priority) } updSortBy={val => updSortBy(val)}></FilterMessages>\r\n                    <PostAddIcon className=\"add-msg-img\" onClick={() => setShowModal(true)}/>\r\n                </div>\r\n                <dl className=\"accordion\">\r\n                    {messagesView()}\r\n                </dl>\r\n                <NewMessageModal show={showModal} handleClose={() => setShowModal(false)} addMessage={addMessage}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MessagesPage;","export const getCurrentDateAsStr = () => {\r\n    return getDateAsStr(null);\r\n};\r\n\r\nexport const getDateAsStr = (date) => {\r\n    var d = date ? new Date(date) : new Date();\r\n    d = new Date(d.getTime() - 3000000);\r\n    var date_format_str = d.getFullYear().toString() + \"-\" + ((d.getMonth() + 1).toString().length === 2 ? (d.getMonth() + 1).toString() : \"0\" + (d.getMonth() + 1).toString()) + \"-\" + (d.getDate().toString().length === 2 ? d.getDate().toString() : \"0\" + d.getDate().toString()) + \" \" + (d.getHours().toString().length === 2 ? d.getHours().toString() : \"0\" + d.getHours().toString()) + \":\" + ((parseInt(d.getMinutes() / 5) * 5).toString().length === 2 ? (parseInt(d.getMinutes() / 5) * 5).toString() : \"0\" + (parseInt(d.getMinutes() / 5) * 5).toString()) + \":00\";\r\n    return date_format_str;\r\n    //2015-03-31 13:35:00\r\n\r\n};\r\n\r\nexport const randomColor = () => '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n\r\n//TODO: the colors should be distinct, white should be excluded\r\nexport const randomColorArr = (num) => {\r\n    const colors = [];\r\n    while (colors.length < num) {\r\n        colors.push(randomColor());\r\n    }\r\n    return colors;\r\n};","import './NewVoteCard.css';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialog: {\r\n        backgroundColor: '#e8f4fc',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n        backgroundColor: '#e8f4fc'\r\n\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 500,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    imgPreview: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction NewVoteCard(props) {\r\n    const { voting, addVote } = props;\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const optionsView = () => {\r\n\r\n        const dataView = voting.options.map(option =>\r\n            <MenuItem key={option} value={option}>{option}</MenuItem>);\r\n        return dataView;\r\n    }\r\n\r\n    function handleAddVote() {\r\n        addVote(voting.id, option);\r\n        setOption(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.form} noValidate>\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <InputLabel id=\"filter-option-label\">Your Vote</InputLabel>\r\n                    <Select\r\n                        labelId=\"filter-option-label\"  variant=\"filled\"\r\n                        id=\"filter-option\" value={option}\r\n                        onChange={(e) => setOption(e.target.value)}\r\n                    >\r\n                        {optionsView()}\r\n                    </Select>\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"button\"  onClick={handleAddVote}>\r\n                    Submit Vote\r\n          </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewVoteCard;","import { Card, CardActionArea, CardContent, Typography } from '@material-ui/core';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { randomColorArr } from '../../shared/Utils';\r\nimport './VotingCardContent.css';\r\n\r\nfunction VotingCardContent(props) {\r\n    const { voting, usersNum } = props;\r\n\r\n    function getVotingPercentageData() {\r\n\r\n        const votesNum = voting.calculatedVotes.filter(x => x>=0).reduce((a, c) => a + c, 0);\r\n\r\n        return {\r\n            labels: ['Voted', 'DidNotVoted'],\r\n            datasets: [\r\n                {\r\n                    label: 'Voting Percentage',\r\n                    data: [votesNum, usersNum - votesNum],\r\n                    backgroundColor: randomColorArr(2),\r\n                    hoverBackgroundColor: randomColorArr(2),\r\n\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    function getVotingResultsData() {\r\n\r\n        return {\r\n            labels: voting.options,\r\n            datasets: [\r\n                {\r\n                    label: 'Voting Percentage',\r\n                    data: voting.calculatedVotes,\r\n                    backgroundColor: randomColorArr(voting.options.length),\r\n                    hoverBackgroundColor: randomColorArr(voting.options.length),\r\n\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-voting-card-content\">\r\n            <Card className=\"card\">\r\n                <CardActionArea className=\"area\">\r\n                    <CardContent>\r\n                        <div className=\"voting-content\">\r\n                            <div className=\"voting-item details-title\">\r\n                                <Typography>\r\n                                    <span className=\"bold-font\"> Details:</span><br />\r\n                                    {voting.details}\r\n                                </Typography>\r\n                                <Typography gutterBottom>\r\n                                    <span className=\"bold-font\">{voting.isActiveVoting() ? \"End Date: \" : \"Ended: \"}</span> {voting.dueDate}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className=\"voting-item\">\r\n                                {voting.isActiveVoting()? null : <Pie data={getVotingResultsData} width={10} height={5} options={{\r\n                                    title: {\r\n                                        display: true,\r\n                                        align: 'center',\r\n                                        text: 'Voting Results',\r\n                                        fontSize: 20\r\n                                    },\r\n                                    legend: {\r\n                                        display: true,\r\n                                        position: 'right'\r\n                                    },\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                }} />}\r\n                            </div>\r\n                            <div className=\"voting-item\">\r\n                                <Pie data={getVotingPercentageData}  options={{\r\n                                    title: {\r\n                                        display: true,\r\n                                        align: 'center',\r\n                                        text: 'Voting Percentage',\r\n                                        fontSize: 20\r\n                                    },\r\n                                    legend: {\r\n                                        display: true,\r\n                                        position: 'right'\r\n                                    },\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingCardContent;","import { useState } from 'react';\r\nimport NewVoteCard from '../NewVoteCard/NewVoteCard';\r\nimport VotingCardContent from '../VotingCardContent/VotingCardContent';\r\nimport './VotingCard.css';\r\n\r\nfunction VotingCard(props){\r\n    const { voting, usersNum, addVote } = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    \r\n    return (\r\n        <div className=\"c-voting-card\">\r\n            <dt className={expanded ? 'title is-expanded' : 'title'} onClick={() => setExpanded(!expanded)}>\r\n                <span className=\"title-icon\">{voting.title}</span> <span className=\"result-title\">{voting.isActiveVoting() ? null : \"Result: \"+ voting.result}</span>\r\n            </dt>\r\n            <dd className={expanded ? 'content is-expanded' : 'content'} >\r\n                <div className=\"voting-card-content\">\r\n                    <div className=\"content-item\">{addVote ? <NewVoteCard voting={voting} addVote={addVote}></NewVoteCard> : <VotingCardContent voting={voting} usersNum={usersNum}></VotingCardContent>}</div>\r\n                </div>\r\n            </dd>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingCard;","import './VotingsCard.css';\r\nimport VotingCard from '../VotingCard/VotingCard';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction VotingsCard(props) {\r\n    const { votings, usersNum, addVote } = props;\r\n\r\n    const votingsView = () => {\r\n\r\n        const dataView = votings.map(voting =>\r\n            <VotingCard key={voting.id} voting={voting} usersNum={usersNum} addVote={addVote}></VotingCard>);\r\n\r\n        return dataView;\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-votings-card\">\r\n            {(votings.length > 0) ?\r\n                <dl className=\"accordion\">\r\n                    {votingsView()}\r\n                </dl>\r\n                : <Alert severity=\"error\">There are no votes</Alert>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingsCard;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Fab, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { useState } from 'react';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport './NewVotingModal.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialog: {\r\n        backgroundColor: 'rgba(0, 151, 19, 0.1)',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 500,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    imgPreview: {\r\n        width: 200,\r\n    },\r\n    newOption: {\r\n        display: 'flex',\r\n        alignItems: \"center\"\r\n    },\r\n}));\r\n\r\nfunction NewVotingModal(props) {\r\n    const { show, handleClose, addVoting } = props;\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    const [optionsList, setOptionsList] = useState([\"\"]);\r\n\r\n    const classes = useStyles();\r\n\r\n    function closeModal() {\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setEndDate(\"\");\r\n        setOptionsList([\"\"]);\r\n        handleClose();\r\n    }\r\n\r\n    const handleOptionsInputChange = (e, index) => {\r\n        const option = e.target.value;\r\n        const list = [...optionsList];\r\n        list[index] = option;\r\n        setOptionsList(list);\r\n\r\n    };\r\n\r\n    const handleAddOptionClick = () => {\r\n        setOptionsList([...optionsList, \"\"]);\r\n    };\r\n\r\n    function handleAddVoting() {\r\n        if ((title !== \"\") && (details !== \"\")) {\r\n            addVoting(title, details, optionsList, endDate);\r\n        }\r\n\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-new-voting-modal\">\r\n            <Dialog\r\n                open={show}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"voting-dialog-slide-title\"\r\n                aria-describedby=\"voting-dialog-slide-description\"\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n            >\r\n                <DialogTitle className={classes.dialog} id=\"voting-dialog-slide-title\">Add A New Voting</DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    <form className={classes.form} noValidate>\r\n                        <FormControl className={classes.formControl}>\r\n                            <TextField id=\"voting-title\" variant=\"filled\" label=\"Voting Title\" value={title} onChange={e => setTitle(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <TextField id=\"voting-details\" variant=\"filled\" multiline rows={8} label=\"Voting Details\" value={details} onChange={e => setDetails(e.target.value)} />\r\n                        </FormControl>\r\n                        {optionsList.map((x, i) => {\r\n                            return (\r\n                                <div className={classes.newOption} key={i}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <TextField id=\"new-option\" variant=\"filled\" label=\"Voting option\" value={x} onChange={e => handleOptionsInputChange(e, i)} />\r\n                                    </FormControl>\r\n                                    {optionsList.length - 1 === i && <AddCircleIcon onClick={handleAddOptionClick} />}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label=\"End Date\"\r\n                            type=\"datetime-local\"\r\n                            variant=\"filled\"\r\n                            defaultValue={endDate}\r\n                            onChange={e => setEndDate(e.target.value)}\r\n                            className={classes.formControl}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}></TextField>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.dialog}>\r\n                    <Button onClick={closeModal} variant=\"contained\" color=\"secondary\" type=\"button\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAddVoting} variant=\"contained\" color=\"primary\" type=\"button\">\r\n                        Add Voting\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NewVotingModal;","import VotingsCard from '../../components/VotingsCard/VotingsCard';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport './VotingsPage.css';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport NewVotingModal from '../../components/NewVotingModal/NewVotingModal';\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction VotingsPage(props) {\r\n    const { votings, usersNum, addVoting } = props;\r\n    const [filter, setFilter] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    let notActiveVotings = votings.filter(function (voting) {\r\n        if (voting.isActiveVoting()) {\r\n            return false;\r\n        }\r\n        const full = (voting.title + \" \" + voting.details).toLowerCase();\r\n        return full.includes(filter.toLowerCase());\r\n    });\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    } else {\r\n        return (\r\n            <div className=\"p-votings\">\r\n                <div className=\"content-item\">\r\n                    <h1>Active Votings</h1>\r\n                    <div className=\"add-voting-container\"><AddCircleOutlineIcon className=\"add-voting-img\" onClick={() => setShowModal(true)} /></div>\r\n                    <VotingsCard className=\"content-item\" votings={votings.filter(v => v.isActiveVoting())} usersNum={usersNum}></VotingsCard></div>\r\n                <NewVotingModal show={showModal} handleClose={() => setShowModal(false)} addVoting={addVoting} />\r\n                <div className=\"content-item\">\r\n                    <h1>Voting Results</h1>\r\n                    <div className=\"filter-control\">\r\n                        <SearchIcon className=\"search-icon\" />\r\n                        <TextField className=\"form-control\" label=\"filter by text in title or details\" onChange={e => setFilter(e.target.value)} />\r\n                    </div>\r\n                    <VotingsCard className=\"content-item\" votings={notActiveVotings} usersNum={usersNum}></VotingsCard></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VotingsPage;","class VotingModel {\r\n    constructor(plainVotingOrid, createdBy, createAt, title, details, options, dueDate) {\r\n        if (typeof plainVotingOrid === 'object') {\r\n            this.id = plainVotingOrid.id;\r\n            this.createdBy = plainVotingOrid.createdBy;\r\n            this.createAt = plainVotingOrid.createAt;\r\n            this.title = plainVotingOrid.title;\r\n            this.details = plainVotingOrid.details;\r\n            this.options = plainVotingOrid.options;\r\n            this.dueDate = plainVotingOrid.dueDate;\r\n        } else {\r\n            this.id = plainVotingOrid;\r\n            this.createdBy = createdBy;\r\n            this.createAt = createAt;\r\n            this.title = title;\r\n            this.details = details;\r\n            this.options = options;\r\n            this.dueDate = dueDate;\r\n        }\r\n\r\n        const calculatedVotes = [];\r\n        for (let i = 0; i < this.options.length; i++) {\r\n            calculatedVotes.push(0);\r\n        }\r\n\r\n        this.calculatedVotes = calculatedVotes;\r\n        this.result = \"\";\r\n    }\r\n\r\n    //TODO: enable multiple results (more than one result with the same number of votes)\r\n    calculateVotes(votes) {\r\n        const calcVotes = this.calculatedVotes;\r\n        let result = this.options[0];\r\n        let nVotes = 0;\r\n        for (const vote of votes) {\r\n            let idx = this.options.findIndex(option => option === vote.vote);\r\n            if (idx >= 0) {\r\n                calcVotes[idx]++;\r\n                if (calcVotes[idx] > nVotes) {\r\n                    nVotes = calcVotes[idx];\r\n                    result = this.options[idx];\r\n                }\r\n            }\r\n        }\r\n        this.calculatedVotes = calcVotes;\r\n        this.result = result;\r\n    }\r\n\r\n    isActiveVoting = () => {\r\n        const today = new Date();\r\n        const vdate = new Date(this.dueDate);\r\n        return today < vdate;\r\n    }\r\n\r\n}\r\n\r\nexport default VotingModel;","import { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MessageCard from '../../components/MessageCard/MessageCard';\r\nimport VotingsCard from '../../components/VotingsCard/VotingsCard';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './DashboardPage.css';\r\n\r\nfunction DashboardPage(props) {\r\n    const { messages, users, addComment, comments, calculatedVotings, votes, addVote } = props;\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    function sortByDate(a, b) {\r\n        return new Date(b.date) - new Date(a.date);\r\n    }\r\n\r\n    const newMessagesView = () => {\r\n\r\n        let data = messages.sort(sortByDate).slice(0, 3);\r\n\r\n        const dataView = data.map(message =>\r\n            <MessageCard key={message.id} message={message} users={users} addComment={addComment} comments={comments.filter(comment => comment.messageId === message.id)}></MessageCard>);\r\n        return dataView;\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/login\" />\r\n    } else {\r\n        return (\r\n            <div className=\"p-dashboard\">\r\n                <div className=\"new-messages\">\r\n                    <h1>New Messages</h1>\r\n                    <dl className=\"accordion\">\r\n                        {newMessagesView()}\r\n                    </dl>\r\n                </div>\r\n                <div className=\"votings\">\r\n                    <div className=\"content-item\">\r\n                        <h1>Voting Results</h1>\r\n                        <VotingsCard votings={calculatedVotings.filter(voting => !voting.isActiveVoting())} usersNum={users.length}></VotingsCard>\r\n                    </div>\r\n                    <div className=\"content-item\">\r\n                        <h1>Pending Votings</h1>\r\n                        <VotingsCard addVote={addVote} votings={calculatedVotings.filter(voting => voting.isActiveVoting() && !votes.some(vote => vote.votingId === voting.id && vote.votedBy === activeUser.id))} usersNum={users.length}></VotingsCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardPage;","\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport jsonUsers from './data/users.json';\nimport jsonMessages from './data/messages.json';\nimport jsonComments from './data/comments.json';\nimport jsonVotings from './data/votings.json';\nimport jsonVotes from './data/votes.json';\nimport { useState } from 'react';\nimport ActiveUserContext from './shared/ActiveUserContext';\nimport HoaNavBar from './components/HoaNavBar/HoaNavBar';\nimport MessagesPage from './pages/MessagesPage/MessagesPage';\nimport { getCurrentDateAsStr, getDateAsStr } from './shared/Utils';\nimport VotingsPage from './pages/VotingsPage/VotingsPage';\nimport VotingModel from './model/VotingModel';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers);\n  const [messages, setMessages] = useState(jsonMessages);\n  const [comments, setComments] = useState(jsonComments);\n  const [votes, setVotes] = useState(jsonVotes);\n  const [calculatedVotings, setCalculatedVotings] = useState(getVotingsData());\n  const [activeUser, setActiveUser] = useState(jsonUsers[0]);\n\n\n\n  function handleLogout() {\n    setActiveUser(null);\n  }\n\n  function handleLogin(loggedinUser) {\n    setActiveUser(loggedinUser);\n  }\n\n  function addVoting(title, details, optionsList, endDate) {\n    debugger;\n    let maxId = 0;\n    if (calculatedVotings.length > 0) {\n      maxId = Math.max(...calculatedVotings.map(o => o.id));\n    }\n\n    const newVoting = new VotingModel(maxId + 1, activeUser.id, getCurrentDateAsStr(),\n      title, details, optionsList, getDateAsStr(endDate));\n\n    setCalculatedVotings(calculatedVotings.concat(newVoting));\n  }\n\n\n  function addMessage(title, details, priority, img) {\n    let maxId = 0;\n    if (comments.length > 0) {\n      maxId = Math.max(...comments.map(o => o.id));\n    }\n\n    const newMessage = {\n      \"id\": maxId + 1,\n      \"createdBy\": activeUser.id,\n      \"createAt\": getCurrentDateAsStr(),\n      \"title\": title,\n      \"details\": details,\n      \"img\": img,\n      \"priority\": ((priority === \"alert\") ? 1 : 2)\n    }\n\n    setMessages(messages.concat(newMessage));\n\n  }\n\n  function addComment(messageId, txt) {\n    let maxId = 0;\n    if (comments.length > 0) {\n      maxId = Math.max(...comments.map(o => o.id));\n    }\n    const newComment = {\n      \"id\": maxId + 1,\n      \"createdBy\": activeUser.id,\n      \"createdAt\": getCurrentDateAsStr(),\n      \"text\": txt,\n      \"messageId\": messageId\n    }\n\n    setComments(comments.concat(newComment));\n  }\n\n  function addVote(votingId, option) {\n    let maxId = 0;\n    if (votes.length > 0) {\n      maxId = Math.max(...votes.map(o => o.id));\n    }\n\n    const newVote = {\n      \"id\": maxId + 1,\n      \"votingId\": votingId,\n      \"votedBy\": activeUser.id,\n      \"vote\": option\n    }\n    setVotes(votes.concat(newVote));\n  }\n\n\n  function getVotingsData() {\n\n    const vdata = jsonVotings.map(plainVoting => {\n      let voting = new VotingModel(plainVoting);\n      voting.calculateVotes(votes.filter(v => v.votingId === voting.id));\n      return voting;\n    });\n    return vdata;\n  }\n\n  return (\n    <div className=\"App\">\n      {calculatedVotings ?\n        <ActiveUserContext.Provider value={activeUser}>\n          <HoaNavBar onLogout={handleLogout} msgNum={messages.length} votingsNum={calculatedVotings.length} />\n          <HashRouter>\n            <Switch>\n              <Route exact path=\"/\"><HomePage /></Route>\n              <Route exact path=\"/login\"><LoginPage users={users} onLogin={handleLogin} /></Route>\n              <Route exact path=\"/signup\"><SignupPage /></Route>\n              <Route exact path=\"/messages\"><MessagesPage messages={messages} users={users}\n                addComment={addComment} comments={comments} addMessage={addMessage} /></Route>\n              <Route exact path=\"/votings\"><VotingsPage votings={calculatedVotings} usersNum={users.length} addVoting={addVoting} /></Route>\n              <Route exact path=\"/dashboard\"><DashboardPage messages={messages} users={users} addComment={addComment}\n                comments={comments} calculatedVotings={calculatedVotings} votes={votes} addVote={addVote} /></Route>\n            </Switch>\n          </HashRouter>\n        </ActiveUserContext.Provider>\n        : <div></div>}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    App / > ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}